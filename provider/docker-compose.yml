version: '3'

services:
  scylla:
    container_name: 'scyllaDB'
    image: 'scylladb/scylla'
    restart: always
    networks:
      - custom-b
    ports:
      - "0.0.0.0:9042:9042"
      - "0.0.0.0:9160:9160"

  ipfs:
    container_name: 'ipfs'
    image: 'ipfs/go-ipfs:latest'
    environment:
      - LIBP2P_FORCE_PNET=1
    restart: always
    command: "daemon --enable-pubsub-experiment"
    networks:
      - custom-b
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    volumes:
    - ./ipfs/swarm.key:/data/ipfs/swarm.key
    - ./ipfs/init-priv.sh:/container-init.d/001-init-priv.sh
    - ./configuration/config.env:/config.env

  orbitdb:
    container_name: 'orbitdb'
    build: ./orbit_node/
    restart: always
    environment:
      IPFS: ipfs
    command: node orbit_api --orbitdb-dir /root/orbitdb
    networks:
      - custom-b
    ports:
      - "0.0.0.0:3000:3000"

  rest_api:
    container_name: 'restapi_service'
    build: ./rest_api/
    environment:
      DB_HOST: scylla
      ORBIT_HOST: orbitdb
    ports:
      - "8000:8000"
    volumes:
      - ./rest_api/app:/root/service
    networks:
      - custom-b

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    volumes:
      - ./mosquitto_broker:/mosquitto
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - "0.0.0.0:1883:1883"
      - "0.0.0.0:9001:9001"
    networks:
      - custom-b

  mqtt_listener:
    container_name: mqtt_listener
    environment:
      MQTT_BROKER: mosquitto
      REST_API: rest_api
    build: ./mqtt_listener/
    volumes:
      - ./mqtt_listener/files:/root/mqtt_listener
    networks:
      - custom-b

networks:
  custom-b:
    driver: bridge